// Generated by CoffeeScript 1.12.7
(function() {
  define(["jquery", "underscore", "arbiter", "chatCommands"], function($, _, arbiter, processCommand) {
    var clear, editDoc, exportObject, input, messageIdToEdit, sendMessage;
    exportObject = {};
    input = $('#input');
    exportObject.editing = false;
    exportObject.searching = false;
    messageIdToEdit = "";
    sendMessage = function() {
      var commandRegex, possibleMatch, text;
      text = input.val();
      input.val('');
      if (text !== "") {
        commandRegex = /^\\[^\s]+/;
        possibleMatch = text.match(commandRegex);
        if (possibleMatch != null) {
          processCommand(possibleMatch[0], text.substring(possibleMatch[0].length));
        } else if (exportObject.editing) {
          arbiter.publish("messages/edit", {
            id: messageIdToEdit,
            text: text
          });
          input.removeClass("editing");
        } else if (exportObject.searching) {
          arbiter.publish("messages/search", text);
        } else {
          arbiter.publish("messages/send", {
            text: text,
            author: localStorage.displayName
          });
        }
        return exportObject.editing = false;
      } else {
        return clear();
      }
    };
    sendMessage = _.throttle(sendMessage, 1000, {
      trailing: false
    });
    editDoc = function(doc) {
      input.val(doc.text);
      exportObject.editing = true;
      exportObject.searching = false;
      input.removeClass("searching");
      messageIdToEdit = doc._id;
      input.addClass("editing");
      return input.focus();
    };
    clear = function(e) {
      if (e != null) {
        e.preventDefault();
      }
      exportObject.editing = false;
      exportObject.searching = false;
      input.removeClass("editing");
      input.removeClass("searching");
      $('.progress').fadeOut();
      input.val("");
      return arbiter.publish("messages/render");
    };
    $(document).keydown(function(e) {
      if (e.which === 13) {
        e.preventDefault();
        return sendMessage();
      } else if (e.which === 40) {
        clear(e);
        exportObject.searching = true;
        exportObject.editing = false;
        input.removeClass("editing");
        input.addClass("searching");
        $('.progress').fadeOut();
        return input.focus();
      } else if (e.which === 27) {
        return clear(e);
      } else if (e.which === 38) {
        return arbiter.publish("messages/getLast", editDoc);
      }
    });
    if (window.openDevTools != null) {
      $('#dev-tools').css("visibility", "visible").click(function() {
        return window.openDevTools();
      });
    }
    arbiter.subscribe("messages/startEdit", function(id) {
      return arbiter.publish("messages/get", {
        id: id,
        callback: function(doc) {
          if (doc.author === localStorage.displayName) {
            return editDoc(doc);
          }
        }
      });
    });
    return exportObject;
  });

}).call(this);
