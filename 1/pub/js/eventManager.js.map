{"version":3,"sources":["eventManager.ts"],"names":[],"mappings":"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","file":"eventManager.js","sourcesContent":["export interface EventManager {\r\n  Subscribe(callback: (...args: any[]) => void): number;\r\n  Unsubscribe(id: number): void;\r\n  Publish(...args: any[]): void;\r\n}\r\n\r\nexport class EventManager0 implements EventManager {\r\n  currentId = 0;\r\n  subscriptions: { [id: number]: () => void | Promise<void> } = { };\r\n\r\n  Subscribe(callback: () => void | Promise<void>) {\r\n    this.subscriptions[this.currentId] = callback;\r\n    let id = this.currentId;\r\n    this.currentId++;\r\n    return id;\r\n  }\r\n\r\n  Unsubscribe(id: number) {\r\n    delete this.subscriptions[id];\r\n  }\r\n\r\n  Publish() {\r\n    let promises = [];\r\n    for (let id in this.subscriptions) {\r\n      let sub = this.subscriptions[id];\r\n      promises.push(Promise.resolve(sub()));\r\n    }\r\n    return Promise.all(promises);\r\n  }\r\n}\r\n\r\nexport class EventManager1<A> implements EventManager {\r\n  currentId = 0;\r\n  subscriptions: { [id: number]: (arg: A) => void | Promise<void> } = { };\r\n\r\n  Subscribe(callback: (arg: A) => void | Promise<void>) {\r\n    this.subscriptions[this.currentId] = callback;\r\n    let id = this.currentId;\r\n    this.currentId++;\r\n    return id;\r\n  }\r\n\r\n  Unsubscribe(id: number) {\r\n    delete this.subscriptions[id];\r\n  }\r\n\r\n  Publish(arg: A) {\r\n    let promises = [];\r\n    for (let id in this.subscriptions) {\r\n      let sub = this.subscriptions[id];\r\n      promises.push(Promise.resolve(sub(arg)));\r\n    }\r\n    return Promise.all(promises);\r\n  }\r\n}\r\n\r\nexport class EventManager2<A1, A2> implements EventManager {\r\n  currentId = 0;\r\n  subscriptions: { [id: number]: (arg1: A1, arg2: A2) => void | Promise<void> } = { };\r\n\r\n  Subscribe(callback: (arg1: A1, arg2: A2) => void | Promise<void> ) {\r\n    this.subscriptions[this.currentId] = callback;\r\n    let id = this.currentId;\r\n    this.currentId++;\r\n    return id;\r\n  }\r\n\r\n  Unsubscribe(id: number) {\r\n    delete this.subscriptions[id];\r\n  }\r\n\r\n  Publish(arg1: A1, arg2: A2) {\r\n    for (let id in this.subscriptions) {\r\n      let sub = this.subscriptions[id];\r\n      sub(arg1, arg2);\r\n    }\r\n  }\r\n}\r\n\r\nexport class EventManager3<A1, A2, A3> implements EventManager {\r\n  currentId = 0;\r\n  subscriptions: { [id: number]: (arg1: A1, arg2: A2, arg3: A3) => void | Promise<void> } = { };\r\n\r\n  Subscribe(callback: (arg1: A1, arg2: A2, arg3: A3) => void | Promise<void>) {\r\n    this.subscriptions[this.currentId] = callback;\r\n    let id = this.currentId;\r\n    this.currentId++;\r\n    return id;\r\n  }\r\n\r\n  Unsubscribe(id: number) {\r\n    delete this.subscriptions[id];\r\n  }\r\n\r\n  Publish(arg1: A1, arg2: A2, arg3: A3) {\r\n    let promises = [];\r\n    for (let id in this.subscriptions) {\r\n      let sub = this.subscriptions[id];\r\n      promises.push(Promise.resolve(sub(arg1, arg2, arg3)));\r\n    }\r\n    return Promise.all(promises);\r\n  }\r\n}\r\n\r\nexport class EventManager4<A1, A2, A3, A4> implements EventManager {\r\n  currentId = 0;\r\n  subscriptions: { [id: number]: (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => void | Promise<void> } = { };\r\n\r\n  Subscribe(callback: (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => void | Promise<void>) {\r\n    this.subscriptions[this.currentId] = callback;\r\n    let id = this.currentId;\r\n    this.currentId++;\r\n    return id;\r\n  }\r\n\r\n  Unsubscribe(id: number) {\r\n    delete this.subscriptions[id];\r\n  }\r\n\r\n  Publish(arg1: A1, arg2: A2, arg3: A3, arg4: A4) {\r\n    let promises = [];\r\n    for (let id in this.subscriptions) {\r\n      let sub = this.subscriptions[id];\r\n      promises.push(Promise.resolve(sub(arg1, arg2, arg3, arg4)));\r\n    }\r\n    return Promise.all(promises);\r\n  }\r\n}\r\n\r\nexport class EventManager5<A1, A2, A3, A4, A5> implements EventManager {\r\n  currentId = 0;\r\n  subscriptions: { [id: number]: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => void | Promise<void> } = { };\r\n\r\n  Subscribe(callback: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => void | Promise<void>) {\r\n    this.subscriptions[this.currentId] = callback;\r\n    let id = this.currentId;\r\n    this.currentId++;\r\n    return id;\r\n  }\r\n\r\n  Unsubscribe(id: number) {\r\n    delete this.subscriptions[id];\r\n  }\r\n\r\n  Publish(arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) {\r\n    let promises = [];\r\n    for (let id in this.subscriptions) {\r\n      let sub = this.subscriptions[id];\r\n      promises.push(Promise.resolve(sub(arg1, arg2, arg3, arg4, arg5)));\r\n    }\r\n    return Promise.all(promises);\r\n  }\r\n}\r\n\r\nexport interface PollManager<R> {\r\n  Subscribe(callback: (...args: any[]) => R | Promise<R>): number;\r\n  Unsubscribe(id: number): void;\r\n  Poll(...args: any[]): Promise<R[]>;\r\n}\r\n\r\nexport class PollManager0<R> implements PollManager<R> {\r\n  currentId = 0;\r\n  subscriptions: { [id: number]: () => R | Promise<R> } = { };\r\n\r\n  Subscribe(callback: () => R | Promise<R>) {\r\n    this.subscriptions[this.currentId] = callback;\r\n    let id = this.currentId;\r\n    this.currentId++;\r\n    return id;\r\n  }\r\n\r\n  Unsubscribe(id: number) {\r\n    delete this.subscriptions[id];\r\n  }\r\n\r\n  Poll() {\r\n    let result: Promise<R>[] = [];\r\n    for (let id in this.subscriptions) {\r\n      let sub = this.subscriptions[id];\r\n      result.push(Promise.resolve(sub()));\r\n    }\r\n    return Promise.all(result);\r\n  }\r\n}\r\n\r\nexport class PollManager1<A, R> implements PollManager<R> {\r\n  currentId = 0;\r\n  subscriptions: { [id: number]: (arg: A) => R | Promise<R> } = { };\r\n\r\n  Subscribe(callback: (arg: A) => R | Promise<R>) {\r\n    this.subscriptions[this.currentId] = callback;\r\n    let id = this.currentId;\r\n    this.currentId++;\r\n    return id;\r\n  }\r\n\r\n  Unsubscribe(id: number) {\r\n    delete this.subscriptions[id];\r\n  }\r\n\r\n  Poll(arg: A) {\r\n    let result: Promise<R>[] = [];\r\n    for (let id in this.subscriptions) {\r\n      let sub = this.subscriptions[id];\r\n      result.push(Promise.resolve(sub(arg)));\r\n    }\r\n    return Promise.all(result);\r\n  }\r\n}\r\n\r\nexport class PollManager2<A1, A2, R> implements PollManager<R> {\r\n  currentId = 0;\r\n  subscriptions: { [id: number]: (arg1: A1, arg2: A2) => R | Promise<R> } = { };\r\n\r\n  Subscribe(callback: (arg1: A1, arg2: A2) => R | Promise<R>) {\r\n    this.subscriptions[this.currentId] = callback;\r\n    let id = this.currentId;\r\n    this.currentId++;\r\n    return id;\r\n  }\r\n\r\n  Unsubscribe(id: number) {\r\n    delete this.subscriptions[id];\r\n  }\r\n\r\n  Poll(arg1: A1, arg2: A2) {\r\n    let result: Promise<R>[] = [];\r\n    for (let id in this.subscriptions) {\r\n      let sub = this.subscriptions[id];\r\n      result.push(Promise.resolve(sub(arg1, arg2)));\r\n    }\r\n    return Promise.all(result);\r\n  }\r\n}\r\n\r\nexport class PollManager3<A1, A2, A3, R> implements PollManager<R> {\r\n  currentId = 0;\r\n  subscriptions: { [id: number]: (arg1: A1, arg2: A2, arg3: A3) => R | Promise<R> } = { };\r\n\r\n  Subscribe(callback: (arg1: A1, arg2: A2, arg3: A3) => R | Promise<R>) {\r\n    this.subscriptions[this.currentId] = callback;\r\n    let id = this.currentId;\r\n    this.currentId++;\r\n    return id;\r\n  }\r\n\r\n  Unsubscribe(id: number) {\r\n    delete this.subscriptions[id];\r\n  }\r\n\r\n  Poll(arg1: A1, arg2: A2, arg3: A3) {\r\n    let result: Promise<R>[] = [];\r\n    for (let id in this.subscriptions) {\r\n      let sub = this.subscriptions[id];\r\n      result.push(Promise.resolve(sub(arg1, arg2, arg3)));\r\n    }\r\n    return Promise.all(result);\r\n  }\r\n}\r\n\r\nexport class PollManager4<A1, A2, A3, A4, R> implements PollManager<R> {\r\n  currentId = 0;\r\n  subscriptions: { [id: number]: (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => R | Promise<R> } = { };\r\n\r\n  Subscribe(callback: (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => R | Promise<R>) {\r\n    this.subscriptions[this.currentId] = callback;\r\n    let id = this.currentId;\r\n    this.currentId++;\r\n    return id;\r\n  }\r\n\r\n  Unsubscribe(id: number) {\r\n    delete this.subscriptions[id];\r\n  }\r\n\r\n  Poll(arg1: A1, arg2: A2, arg3: A3, arg4: A4) {\r\n    let result: Promise<R>[] = [];\r\n    for (let id in this.subscriptions) {\r\n      let sub = this.subscriptions[id];\r\n      result.push(Promise.resolve(sub(arg1, arg2, arg3, arg4)));\r\n    }\r\n    return Promise.all(result);\r\n  }\r\n}\r\n\r\nexport class PollManager5<A1, A2, A3, A4, A5, R> implements PollManager<R> {\r\n  currentId = 0;\r\n  subscriptions: { [id: number]: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => R | Promise<R> } = { };\r\n\r\n  Subscribe(callback: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => R | Promise<R>) {\r\n    this.subscriptions[this.currentId] = callback;\r\n    let id = this.currentId;\r\n    this.currentId++;\r\n    return id;\r\n  }\r\n\r\n  Unsubscribe(id: number) {\r\n    delete this.subscriptions[id];\r\n  }\r\n\r\n  Poll(arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) {\r\n    let result: Promise<R>[] = [];\r\n    for (let id in this.subscriptions) {\r\n      let sub = this.subscriptions[id];\r\n      result.push(Promise.resolve(sub(arg1, arg2, arg3, arg4, arg5)));\r\n    }\r\n    return Promise.all(result);\r\n  }\r\n}\r\n"]}