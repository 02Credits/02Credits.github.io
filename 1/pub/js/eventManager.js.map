{"version":3,"sources":["eventManager.ts"],"names":[],"mappings":"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","file":"eventManager.js","sourcesContent":["export interface EventManager {\r\n    Subscribe(callback: (...args: any[]) => void): number;\r\n    Unsubscribe(id: number): void;\r\n    Publish(...args: any[]): void;\r\n}\r\n\r\nexport class EventManager0 implements EventManager {\r\n    currentId = 0;\r\n    subscriptions: { [id: number]: () => void } = { };\r\n\r\n    Subscribe(callback: () => void) {\r\n        this.subscriptions[this.currentId] = callback;\r\n        let id = this.currentId;\r\n        this.currentId++;\r\n        return id;\r\n    }\r\n\r\n    Unsubscribe(id: number) {\r\n        delete this.subscriptions[id];\r\n    }\r\n\r\n    Publish() {\r\n        for (let id in this.subscriptions) {\r\n            this.subscriptions[id]();\r\n        }\r\n    }\r\n}\r\n\r\nexport class EventManager1<A> implements EventManager {\r\n    currentId = 0;\r\n    subscriptions: { [id: number]: (arg: A) => void } = { };\r\n\r\n    Subscribe(callback: (arg: A) => void) {\r\n        this.subscriptions[this.currentId] = callback;\r\n        let id = this.currentId;\r\n        this.currentId++;\r\n        return id;\r\n    }\r\n\r\n    Unsubscribe(id: number) {\r\n        delete this.subscriptions[id];\r\n    }\r\n\r\n    Publish(arg: A) {\r\n        for (let id in this.subscriptions) {\r\n            let sub = this.subscriptions[id];\r\n            sub(arg);\r\n        }\r\n    }\r\n}\r\n\r\nexport class EventManager2<A1, A2> implements EventManager {\r\n    currentId = 0;\r\n    subscriptions: { [id: number]: (arg1: A1, arg2: A2) => void } = { };\r\n\r\n    Subscribe(callback: (arg1: A1, arg2: A2) => void) {\r\n        this.subscriptions[this.currentId] = callback;\r\n        let id = this.currentId;\r\n        this.currentId++;\r\n        return id;\r\n    }\r\n\r\n    Unsubscribe(id: number) {\r\n        delete this.subscriptions[id];\r\n    }\r\n\r\n    Publish(arg1: A1, arg2: A2) {\r\n        for (let id in this.subscriptions) {\r\n            let sub = this.subscriptions[id];\r\n            sub(arg1, arg2);\r\n        }\r\n    }\r\n}\r\n\r\nexport class EventManager3<A1, A2, A3> implements EventManager {\r\n    currentId = 0;\r\n    subscriptions: { [id: number]: (arg1: A1, arg2: A2, arg3: A3) => void } = { };\r\n\r\n    Subscribe(callback: (arg1: A1, arg2: A2, arg3: A3) => void) {\r\n        this.subscriptions[this.currentId] = callback;\r\n        let id = this.currentId;\r\n        this.currentId++;\r\n        return id;\r\n    }\r\n\r\n    Unsubscribe(id: number) {\r\n        delete this.subscriptions[id];\r\n    }\r\n\r\n    Publish(arg1: A1, arg2: A2, arg3: A3) {\r\n        for (let id in this.subscriptions) {\r\n            let sub = this.subscriptions[id];\r\n            sub(arg1, arg2, arg3);\r\n        }\r\n    }\r\n}\r\n\r\nexport class EventManager4<A1, A2, A3, A4> implements EventManager {\r\n    currentId = 0;\r\n    subscriptions: { [id: number]: (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => void } = { };\r\n\r\n    Subscribe(callback: (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => void) {\r\n        this.subscriptions[this.currentId] = callback;\r\n        let id = this.currentId;\r\n        this.currentId++;\r\n        return id;\r\n    }\r\n\r\n    Unsubscribe(id: number) {\r\n        delete this.subscriptions[id];\r\n    }\r\n\r\n    Publish(arg1: A1, arg2: A2, arg3: A3, arg4: A4) {\r\n        for (let id in this.subscriptions) {\r\n            let sub = this.subscriptions[id];\r\n            sub(arg1, arg2, arg3, arg4);\r\n        }\r\n    }\r\n}\r\n\r\nexport class EventManager5<A1, A2, A3, A4, A5> implements EventManager {\r\n    currentId = 0;\r\n    subscriptions: { [id: number]: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => void } = { };\r\n\r\n    Subscribe(callback: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => void) {\r\n        this.subscriptions[this.currentId] = callback;\r\n        let id = this.currentId;\r\n        this.currentId++;\r\n        return id;\r\n    }\r\n\r\n    Unsubscribe(id: number) {\r\n        delete this.subscriptions[id];\r\n    }\r\n\r\n    Publish(arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) {\r\n        for (let id in this.subscriptions) {\r\n            let sub = this.subscriptions[id];\r\n            sub(arg1, arg2, arg3, arg4, arg5);\r\n        }\r\n    }\r\n}\r\n\r\nexport interface PollManager<R> {\r\n    Subscribe(callback: (...args: any[]) => R | Promise<R>): number;\r\n    Unsubscribe(id: number): void;\r\n    Poll(...args: any[]): Promise<R[]>;\r\n}\r\n\r\nexport class PollManager0<R> implements PollManager<R> {\r\n    currentId = 0;\r\n    subscriptions: { [id: number]: () => R | Promise<R> } = { };\r\n\r\n    Subscribe(callback: () => R | Promise<R>) {\r\n        this.subscriptions[this.currentId] = callback;\r\n        let id = this.currentId;\r\n        this.currentId++;\r\n        return id;\r\n    }\r\n\r\n    Unsubscribe(id: number) {\r\n        delete this.subscriptions[id];\r\n    }\r\n\r\n    Poll() {\r\n        let result: Promise<R>[] = [];\r\n        for (let id in this.subscriptions) {\r\n            let sub = this.subscriptions[id];\r\n            result.push(Promise.resolve(sub()));\r\n        }\r\n        return Promise.all(result);\r\n    }\r\n}\r\n\r\nexport class PollManager1<A, R> implements PollManager<R> {\r\n    currentId = 0;\r\n    subscriptions: { [id: number]: (arg: A) => R | Promise<R> } = { };\r\n\r\n    Subscribe(callback: (arg: A) => R | Promise<R>) {\r\n        this.subscriptions[this.currentId] = callback;\r\n        let id = this.currentId;\r\n        this.currentId++;\r\n        return id;\r\n    }\r\n\r\n    Unsubscribe(id: number) {\r\n        delete this.subscriptions[id];\r\n    }\r\n\r\n    Poll(arg: A) {\r\n        let result: Promise<R>[] = [];\r\n        for (let id in this.subscriptions) {\r\n            let sub = this.subscriptions[id];\r\n            result.push(Promise.resolve(sub(arg)));\r\n        }\r\n        return Promise.all(result);\r\n    }\r\n}\r\n\r\nexport class PollManager2<A1, A2, R> implements PollManager<R> {\r\n    currentId = 0;\r\n    subscriptions: { [id: number]: (arg1: A1, arg2: A2) => R | Promise<R> } = { };\r\n\r\n    Subscribe(callback: (arg1: A1, arg2: A2) => R | Promise<R>) {\r\n        this.subscriptions[this.currentId] = callback;\r\n        let id = this.currentId;\r\n        this.currentId++;\r\n        return id;\r\n    }\r\n\r\n    Unsubscribe(id: number) {\r\n        delete this.subscriptions[id];\r\n    }\r\n\r\n    Poll(arg1: A1, arg2: A2) {\r\n        let result: Promise<R>[] = [];\r\n        for (let id in this.subscriptions) {\r\n            let sub = this.subscriptions[id];\r\n            result.push(Promise.resolve(sub(arg1, arg2)));\r\n        }\r\n        return Promise.all(result);\r\n    }\r\n}\r\n\r\nexport class PollManager3<A1, A2, A3, R> implements PollManager<R> {\r\n    currentId = 0;\r\n    subscriptions: { [id: number]: (arg1: A1, arg2: A2, arg3: A3) => R | Promise<R> } = { };\r\n\r\n    Subscribe(callback: (arg1: A1, arg2: A2, arg3: A3) => R | Promise<R>) {\r\n        this.subscriptions[this.currentId] = callback;\r\n        let id = this.currentId;\r\n        this.currentId++;\r\n        return id;\r\n    }\r\n\r\n    Unsubscribe(id: number) {\r\n        delete this.subscriptions[id];\r\n    }\r\n\r\n    Poll(arg1: A1, arg2: A2, arg3: A3) {\r\n        let result: Promise<R>[] = [];\r\n        for (let id in this.subscriptions) {\r\n            let sub = this.subscriptions[id];\r\n            result.push(Promise.resolve(sub(arg1, arg2, arg3)));\r\n        }\r\n        return Promise.all(result);\r\n    }\r\n}\r\n\r\nexport class PollManager4<A1, A2, A3, A4, R> implements PollManager<R> {\r\n    currentId = 0;\r\n    subscriptions: { [id: number]: (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => R | Promise<R> } = { };\r\n\r\n    Subscribe(callback: (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => R | Promise<R>) {\r\n        this.subscriptions[this.currentId] = callback;\r\n        let id = this.currentId;\r\n        this.currentId++;\r\n        return id;\r\n    }\r\n\r\n    Unsubscribe(id: number) {\r\n        delete this.subscriptions[id];\r\n    }\r\n\r\n    Poll(arg1: A1, arg2: A2, arg3: A3, arg4: A4) {\r\n        let result: Promise<R>[] = [];\r\n        for (let id in this.subscriptions) {\r\n            let sub = this.subscriptions[id];\r\n            result.push(Promise.resolve(sub(arg1, arg2, arg3, arg4)));\r\n        }\r\n        return Promise.all(result);\r\n    }\r\n}\r\n\r\nexport class PollManager5<A1, A2, A3, A4, A5, R> implements PollManager<R> {\r\n    currentId = 0;\r\n    subscriptions: { [id: number]: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => R | Promise<R> } = { };\r\n\r\n    Subscribe(callback: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => R | Promise<R>) {\r\n        this.subscriptions[this.currentId] = callback;\r\n        let id = this.currentId;\r\n        this.currentId++;\r\n        return id;\r\n    }\r\n\r\n    Unsubscribe(id: number) {\r\n        delete this.subscriptions[id];\r\n    }\r\n\r\n    Poll(arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) {\r\n        let result: Promise<R>[] = [];\r\n        for (let id in this.subscriptions) {\r\n            let sub = this.subscriptions[id];\r\n            result.push(Promise.resolve(sub(arg1, arg2, arg3, arg4, arg5)));\r\n        }\r\n        return Promise.all(result);\r\n    }\r\n}\r\n"]}