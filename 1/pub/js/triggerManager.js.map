{"version":3,"sources":["triggerManager.ts"],"names":[],"mappings":";;;IAaA,mBAA0B,MAAsB,IAAsB,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,CAAC,CAAC;;IAEnG;QACI,4BAAS,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,UAAU,EAAE,OAAO;YAC5C,EAAE,CAAC,CAAC,wBAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACnB,EAAE,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBACxB,EAAE,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;wBAC1B,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;4BAC/B,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;wBAChC,CAAC;oBACL,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;oBAChC,CAAC;oBACD,UAAU,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACvC,CAAC;YACL,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;;;;;;;;;;;;;QACD,CAAC","file":"triggerManager.js","sourcesContent":["import {CheckEntity} from \"./ces\";\r\nimport {Collision} from \"./collisionManager\";\r\nimport {isPlayer} from \"./playerManager\";\r\n\r\nimport {CombinedEntity} from \"./entity\";\r\n\r\nexport interface Entity {\r\n    trigger: {\r\n        action: () => void\r\n        once?: boolean,\r\n        complete?: boolean\r\n    }\r\n}\r\nexport function isTrigger(entity: CombinedEntity): entity is Entity { return \"trigger\" in entity; }\r\n\r\nexport function setup() {\r\n    Collision.Subscribe((player, collidable, details) => {\r\n        if (isPlayer(player)) {\r\n            if (isTrigger(collidable)) {\r\n                if (collidable.trigger.once) {\r\n                    if (!collidable.trigger.complete) {\r\n                        collidable.trigger.action();\r\n                    }\r\n                } else {\r\n                    collidable.trigger.action();\r\n                }\r\n                collidable.trigger.complete = true;\r\n            }\r\n        }\r\n    });\r\n}\r\n"]}