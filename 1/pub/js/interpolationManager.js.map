{"version":3,"sources":["interpolationManager.ts"],"names":[],"mappings":";;;IAsBA,wBAA+B,MAAsB,IAAsB,MAAM,CAAC,cAAc,IAAI,MAAM,CAAC,CAAC,CAAC;;IAI7G,aAAa,CAAS,EAAE,CAAS,EAAE,CAAS;QAC1C,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAED,wBAA+B,MAAW,EAAE,WAAgB;QAC1D,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC;YACtB,IAAI,KAAK,GAAS,MAAM,CAAC,EAAE,CAAC,CAAC;YAC7B,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAClB,WAAW,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;YAC1B,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAChC,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvC,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvC,WAAW,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;YACtD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC;gBACpC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBACrB,WAAW,CAAC,EAAE,CAAC,GAAG,EAAE,CAAA;gBACtB,CAAC;gBACD,cAAc,CAAC,KAAK,EAAE,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;YACzC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,WAAW,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;YAC/B,CAAC;QACH,CAAC;IACH,CAAC;;IAED,yBAAyB,MAAc,EAAE,IAAY;QACnD,IAAI,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC;QACtC,cAAc,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC;QAChE,cAAc,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;QAC5D,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;QACzB,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;QACtB,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,gBAAgB,MAAc,EAAE,IAAY;QAC1C,EAAE,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC;YACvE,EAAE,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;gBACtC,cAAc,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;YACtF,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,cAAc,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YAClF,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAChC,CAAC;QACD,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;IAC/C,CAAC;IAED,qBAAqB,KAAU,EAAE,GAAQ,EAAE,MAAW,EAAE,MAAc;QACpE,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC;YACrB,EAAE,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC;gBACd,IAAI,UAAU,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;gBAC3B,IAAI,QAAQ,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;gBACvB,EAAE,CAAC,CAAC,OAAO,UAAU,IAAI,QAAQ,CAAC,CAAC,CAAC;oBAClC,WAAW,CAAC,UAAU,EAAE,QAAQ,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;gBACxD,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,MAAM,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,UAAU,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;gBACjD,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IAED,0BAA0B,MAAc,EAAE,IAAY;QACpD,IAAI,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,cAAc,CAAC;QACrD,IAAI,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,YAAY,CAAC;QACjD,IAAI,MAAM,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC;QACzF,MAAM,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC;QACjE,WAAW,CAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED;QACE,GAAG,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,MAAM;YAC/B,EAAE,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC;oBACtC,MAAM,CAAC,YAAY,CAAC,KAAK,GAAG;wBAC1B,cAAc,EAAE,EAAE;wBAClB,YAAY,EAAE,EAAE;wBAChB,WAAW,EAAE,GAAG;wBAChB,OAAO,EAAE,KAAK;wBACd,WAAW,EAAE,KAAK;qBACnB,CAAA;YACH,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAC,CAAA;QACF,yBAAM,CAAC,SAAS,CAAC,CAAC,IAAI;YACpB,IAAI,oBAAoB,GAAG,GAAG,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;YAE3D,GAAG,CAAC,CAAC,IAAI,MAAM,IAAI,oBAAoB,CAAC,CAAC,CAAC;gBACxC,IAAI,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;gBACvC,IAAI,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC;gBACtC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;oBACvB,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gBAChC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,EAAE,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC,WAAW,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;wBACnD,EAAE,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;4BAC3B,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;wBACvB,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,EAAE,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;gCACtB,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;4BAC3B,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,iBAAiB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;4BACpC,CAAC;wBACH,CAAC;oBACH,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;oBACjC,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;;;;;;;;;;;;;;;YA9GD,+BAAW,iBAAiB,GAAG,IAAI,4BAAa,EAAU,EAAC;QA+G3D,CAAC","file":"interpolationManager.js","sourcesContent":["import {CombinedEntity} from \"./entity\";\r\nimport {Update} from \"./animationManager\";\r\nimport {EventManager1} from \"./eventManager\";\r\nimport * as ces from \"./ces\";\r\n\r\nexport interface Entity {\r\n  interpolated: {\r\n    start: any;\r\n    end: any;\r\n    length: number;\r\n    state?: {\r\n      collapsedStart: any;\r\n      collapsedEnd: any;\r\n      timeStarted: number;\r\n      reverse: boolean;\r\n      initialized: boolean;\r\n    }\r\n    reversable?: boolean;\r\n    repeating?: boolean;\r\n    kill?: boolean\r\n  }\r\n}\r\nexport function isInterpolated(entity: CombinedEntity): entity is Entity { return \"interpolated\" in entity; }\r\n\r\nexport let AnimationFinished = new EventManager1<Entity>();\r\n\r\nfunction mix(x: number, y: number, a: number) {\r\n  return x * (1 - a) + y * a;\r\n}\r\n\r\nexport function collapseTarget(target: any, destination: any) {\r\n  for (let id in target) {\r\n    let value : any = target[id];\r\n    if (!isNaN(value)) {\r\n      destination[id] = value;\r\n    } else if (Array.isArray(value)) {\r\n      let max = Math.max(value[0], value[1]);\r\n      let min = Math.min(value[0], value[1]);\r\n      destination[id] = Math.random() * (max - min) + min;\r\n    } else if (typeof value == \"object\") {\r\n      if (!destination[id]) {\r\n        destination[id] = {}\r\n      }\r\n      collapseTarget(value, destination[id]);\r\n    } else {\r\n      destination[id] = target[id];\r\n    }\r\n  }\r\n}\r\n\r\nfunction initializeState(entity: Entity, time: number) {\r\n  let state = entity.interpolated.state;\r\n  collapseTarget(entity.interpolated.start, state.collapsedStart);\r\n  collapseTarget(entity.interpolated.end, state.collapsedEnd);\r\n  state.timeStarted = time;\r\n  state.reverse = false;\r\n  state.initialized = true;\r\n}\r\n\r\nfunction repeat(entity: Entity, time: number) {\r\n  if (entity.interpolated.reversable) {\r\n    entity.interpolated.state.reverse = !entity.interpolated.state.reverse;\r\n    if (entity.interpolated.state.reverse) {\r\n      collapseTarget(entity.interpolated.start, entity.interpolated.state.collapsedStart);\r\n    } else {\r\n      collapseTarget(entity.interpolated.end, entity.interpolated.state.collapsedEnd);\r\n    }\r\n  } else {\r\n    initializeState(entity, time);\r\n  }\r\n  entity.interpolated.state.timeStarted = time;\r\n}\r\n\r\nfunction interpolate(start: any, end: any, target: any, amount: number) {\r\n  for (let id in start) {\r\n    if (id in end) {\r\n      let startValue = start[id];\r\n      let endValue = end[id];\r\n      if (typeof startValue == \"object\") {\r\n        interpolate(startValue, endValue, target[id], amount);\r\n      } else {\r\n        target[id] = mix(startValue, endValue, amount);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction interpolateState(entity: Entity, time: number) {\r\n  let start = entity.interpolated.state.collapsedStart;\r\n  let end = entity.interpolated.state.collapsedEnd;\r\n  let amount = (time - entity.interpolated.state.timeStarted) / entity.interpolated.length;\r\n  amount = entity.interpolated.state.reverse ? 1 - amount : amount;\r\n  interpolate(start, end, entity, amount);\r\n}\r\n\r\nexport function Setup() {\r\n  ces.CheckEntity.Subscribe((entity) => {\r\n    if (isInterpolated(entity)) {\r\n      if (!(\"state\" in entity.interpolated))\r\n      entity.interpolated.state = {\r\n        collapsedStart: {},\r\n        collapsedEnd: {},\r\n        timeStarted: NaN,\r\n        reverse: false,\r\n        initialized: false\r\n      }\r\n    }\r\n    return true;\r\n  })\r\n  Update.Subscribe((time) => {\r\n    let interpolatedEntities = ces.getEntities(isInterpolated);\r\n\r\n    for (let entity of interpolatedEntities) {\r\n      let interpolated = entity.interpolated;\r\n      let state = entity.interpolated.state;\r\n      if (!state.initialized) {\r\n        initializeState(entity, time);\r\n      } else {\r\n        if (time - state.timeStarted > interpolated.length) {\r\n          if (interpolated.repeating) {\r\n            repeat(entity, time);\r\n          } else {\r\n            if (interpolated.kill) {\r\n              ces.removeEntity(entity);\r\n            } else {\r\n              AnimationFinished.Publish(entity);\r\n            }\r\n          }\r\n        } else {\r\n          interpolateState(entity, time);\r\n        }\r\n      }\r\n    }\r\n  });\r\n}\r\n"]}