{"version":3,"sources":["playerManager.ts"],"names":[],"mappings":"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","file":"playerManager.js","sourcesContent":["import input from \"./inputManager.js\";\r\nimport * as ces from \"./ces.js\";\r\nimport {Update} from \"./animationManager\";\r\nimport {Entity as RenderedEntity} from \"./pixiManager\";\r\nimport {Entity as ChildEntity} from \"./parentManager\";\r\n\r\nimport {CombinedEntity} from \"./entity\";\r\n\r\nexport interface PlayerEntity extends RenderedEntity {\r\n    player: {\r\n        stepSpeed: number,\r\n        stepSize: number,\r\n        speed: number,\r\n        vx?: number,\r\n        vy?: number,\r\n        walkAnimation?: number\r\n    }\r\n}\r\nexport function isPlayer(entity: CombinedEntity): entity is PlayerEntity { return \"player\" in entity; };\r\n\r\nexport interface FootEntity extends RenderedEntity, ChildEntity {\r\n    foot: boolean\r\n}\r\nexport function isFoot(entity: CombinedEntity): entity is FootEntity { return \"foot\" in entity; }\r\n\r\nexport type Entity = PlayerEntity | FootEntity;\r\n\r\nfunction updateFeet(playerEntity: PlayerEntity) {\r\n    var scale = 1;\r\n    if (\"scale\" in playerEntity.rendered) {\r\n        scale = playerEntity.rendered.scale;\r\n    }\r\n\r\n    var feet = ces.GetEntities(isFoot);\r\n    for (let entity of feet) {\r\n        entity.child.relativePosition.y =\r\n            Math.sin(playerEntity.player.walkAnimation) * // Move steps by sin wave\r\n            playerEntity.player.stepSize *                // Account for settings\r\n            playerEntity.player.speed *                   // Step faster as you walk faster\r\n            entity.child.relativePosition.x *             // Account for which foot and scale a bit\r\n            scale;\r\n    }\r\n}\r\n\r\nfunction updatePlayer(entity: PlayerEntity) {\r\n    var mouseState = input.MouseState();\r\n    var dx = mouseState.x - entity.position.x;\r\n    var dy = mouseState.y - entity.position.y;\r\n\r\n    entity.position.rotation = Math.atan2(dy, dx) + Math.PI / 2;\r\n\r\n    var length = Math.sqrt(dx * dx + dy * dy);\r\n    if (entity.dimensions && length > 3) {\r\n        dx = dx / length;\r\n        dy = dy / length;\r\n\r\n        entity.player.vx += dx * 0.1;\r\n        entity.player.vy += dy * 0.1;\r\n    }\r\n\r\n    entity.player.vx *= 0.85;\r\n    entity.player.vy *= 0.85;\r\n\r\n    var playerSpeed = Math.sqrt(entity.player.vx * entity.player.vx + entity.player.vy * entity.player.vy)\r\n    entity.player.speed = playerSpeed;\r\n    entity.player.walkAnimation += playerSpeed * entity.player.stepSpeed;\r\n\r\n    entity.position.x += entity.player.vx;\r\n    entity.position.y += entity.player.vy;\r\n}\r\n\r\nexport function Setup() {\r\n    ces.EntityAdded.Subscribe((entity) => {\r\n        if (isPlayer(entity)) {\r\n            entity.player.vx = 0;\r\n            entity.player.vy = 0;\r\n            entity.player.walkAnimation = 0;\r\n        }\r\n    });\r\n\r\n    Update.Subscribe(() => {\r\n        for (let entity of ces.GetEntities(isPlayer)) {\r\n            updatePlayer(entity);\r\n            updateFeet(entity);\r\n        }\r\n    });\r\n}\r\n"]}