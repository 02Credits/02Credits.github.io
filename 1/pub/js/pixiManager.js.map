{"version":3,"sources":["pixiManager.ts"],"names":[],"mappings":"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","file":"pixiManager.js","sourcesContent":["import * as ces from \"./ces\";\r\nimport {Update} from \"./animationManager\";\r\nimport {isCamera} from \"./cameraManager\";\r\n\r\nimport {CombinedEntity} from \"./entity\";\r\n\r\nimport * as pixi from \"pixi.js\";\r\n\r\nexport interface RenderInfo {\r\n  texture: string;\r\n  alpha?: number;\r\n  scale?: number;\r\n}\r\n\r\nexport interface Position {\r\n  x: number;\r\n  y: number;\r\n  cx?: number;\r\n  cy?: number;\r\n  rotation?: number;\r\n  z?: number;\r\n}\r\n\r\nexport interface Dimensions {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport interface Entity {\r\n  rendered: RenderInfo;\r\n  position: Position;\r\n  dimensions?: Dimensions;\r\n}\r\nexport function isRenderable(entity: CombinedEntity): entity is Entity { return \"rendered\" in entity; }\r\n\r\nlet sprites: { [id: string]: pixi.Sprite }  = { };\r\nlet size = Math.min(window.innerWidth, window.innerHeight);\r\nexport let renderer: pixi.CanvasRenderer;\r\n\r\nlet stages: { [id: string]: pixi.Container } =  { };\r\nlet uiStages: { [id: string]: pixi.Container } = { };\r\n\r\nlet textures: { [id: string]: pixi.loaders.Resource } = {};\r\n\r\nexport let root: pixi.Container;\r\nexport let overlay: pixi.Container;\r\n\r\nfunction afterLoad() {\r\n  ces.EntityRemoved.Subscribe((entity) => {\r\n    if (isRenderable(entity) && sprites[entity.id]) {\r\n      stages[entity.position.z].removeChild(sprites[entity.id]);\r\n    }\r\n  });\r\n\r\n  ces.EntityRemoved.Subscribe((entity) => {\r\n    if (isRenderable(entity) && sprites[entity.id]) {\r\n      uiStages[entity.position.z].removeChild(sprites[entity.id]);\r\n    }\r\n  });\r\n\r\n  ces.EntityAdded.Subscribe((entity) => {\r\n    if (isRenderable(entity)) {\r\n      let rendered = entity.rendered;\r\n      sprites[entity.id] = new pixi.Sprite(textures[rendered.texture].texture);\r\n      updateSprite(entity);\r\n      let stage;\r\n      if (!(\"z\" in entity.position)) {\r\n        entity.position.z = 5;\r\n      }\r\n      if (!(entity.position.z.toString() in stages)) {\r\n        stages[entity.position.z] = new pixi.Container();\r\n        root.addChild(stages[entity.position.z]);\r\n      }\r\n      stage = stages[entity.position.z];\r\n      stage.addChild(sprites[entity.id]);\r\n    }\r\n  });\r\n\r\n  Update.Subscribe(() => {\r\n    for (let entity of ces.GetEntities(isRenderable)) {\r\n      updateSprite(entity);\r\n    }\r\n  });\r\n\r\n  Update.Subscribe(() => {\r\n    let cameras = ces.GetEntities(isCamera);\r\n    if (cameras.length > 0) {\r\n      let cameraEntity = cameras[0];\r\n      let scale = 1;\r\n      if (\"scale\" in cameraEntity.camera) {\r\n        scale = cameraEntity.camera.scale;\r\n      }\r\n      root.x = -cameraEntity.position.x + (renderer.width / 2);\r\n      root.y = -cameraEntity.position.y + (renderer.height / 2);\r\n      root.scale.x = scale * renderer.width / 100;\r\n      root.scale.y = scale * renderer.height / 100;\r\n    }\r\n\r\n    root.children = root.children.sort((stage1, stage2) => {\r\n      if (stage1 === overlay) {\r\n        return -1;\r\n      } else if (stage2 === overlay) {\r\n        return 1;\r\n      }\r\n      let zIndex1, zIndex2;\r\n      for (let index of Object.keys(stages)) {\r\n        if (stages[index] === stage1) {\r\n          zIndex1 = index;\r\n        }\r\n        if (stages[index] === stage2) {\r\n          zIndex2 = index;\r\n        }\r\n      }\r\n      return zIndex1.localeCompare(zIndex2);\r\n    });\r\n\r\n    renderer.render(root);\r\n  });\r\n}\r\n\r\nfunction updateSprite(entity: Entity & {id: string}) {\r\n  if (sprites[entity.id]) {\r\n    let rendered = entity.rendered;\r\n    let position = entity.position;\r\n    let sprite = sprites[entity.id];\r\n\r\n    sprite.x = position.x;\r\n    sprite.y = position.y;\r\n\r\n    if (sprite.texture !== textures[rendered.texture].texture) {\r\n      sprite.texture = textures[rendered.texture].texture;\r\n    }\r\n\r\n    if (\"alpha\" in rendered) {\r\n      sprite.alpha = rendered.alpha;\r\n    }\r\n\r\n    let scale = 1;\r\n    if (\"scale\" in rendered) {\r\n      scale = rendered.scale;\r\n    }\r\n\r\n    if (\"dimensions\" in entity) {\r\n      sprite.width = entity.dimensions.width * scale;\r\n      sprite.height = entity.dimensions.height * scale;\r\n    } else {\r\n      entity.dimensions = {\r\n        width: sprite.width,\r\n        height: sprite.height\r\n      }\r\n    }\r\n\r\n    if (\"rotation\" in position) {\r\n      sprite.rotation = position.rotation;\r\n    }\r\n\r\n    if (\"cx\" in position) {\r\n      sprite.anchor.x = position.cx;\r\n    }\r\n\r\n    if (\"cy\" in position) {\r\n      sprite.anchor.y = position.cy;\r\n    }\r\n  }\r\n}\r\n\r\nfunction positionRenderer() {\r\n  let size = Math.min(window.innerWidth, window.innerHeight) - 100;\r\n  renderer.view.style.width = size + \"px\";\r\n  renderer.view.style.height = size + \"px\";\r\n  renderer.view.style.marginLeft = -size / 2 + \"px\";\r\n  renderer.view.style.marginTop = -size / 2 + \"px\";\r\n  renderer.resize(size, size);\r\n}\r\n\r\nexport async function Setup(texturePaths: string[]) {\r\n  renderer = new pixi.CanvasRenderer(size, size);\r\n  root = new pixi.Container();\r\n  overlay = new pixi.Container();\r\n  root.addChild(overlay);\r\n\r\n  document.getElementById(\"game\").appendChild(renderer.view);\r\n  renderer.view.focus();\r\n\r\n  window.onresize = positionRenderer;\r\n  positionRenderer();\r\n\r\n  return new Promise((resolve) => {\r\n    for (let path of texturePaths) {\r\n      let location = window.location.href.substring(0, window.location.href.lastIndexOf('/') + 1);\r\n      pixi.loader.add(path, location + \"assets/\" + path).load((loader: pixi.loaders.Loader, resources: { [id: string]: pixi.loaders.Resource }) => {\r\n        textures[path] = resources[path];\r\n        if (Object.keys(textures).length == texturePaths.length) {\r\n          afterLoad();\r\n          resolve();\r\n        }\r\n      });\r\n    }\r\n  });\r\n}\r\n"]}