{"version":3,"sources":["wallManager.ts"],"names":[],"mappings":";;;IASA,oBAA2B,MAAsB,IAA8B,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,CAAC,CAAC;;IAO7G,gBAAuB,MAAsB,IAA0B,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC;;IAKjG;QACE,4BAAS,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,UAAU,EAAE,OAAO;YAC9C,EAAE,CAAC,CAAC,QAAQ,IAAI,MAAM,CAAC,CAAC,CAAC;gBACvB,EAAE,CAAC,CAAC,MAAM,IAAI,UAAU,CAAC,CAAC,CAAC;oBACzB,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC1G,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;;;;;;;;;;;;QACD,CAAC","file":"wallManager.js","sourcesContent":["import {CheckEntity} from \"./ces\";\r\nimport {Collision, Entity as CollidableEntity} from \"./collisionManager\";\r\nimport {Dimensions, Position} from \"./pixiManager\"\r\nimport {CombinedEntity} from \"./entity\";\r\nimport * as utils from \"./utils\";\r\n\r\nexport interface PhysicalEntity extends CollidableEntity {\r\n  physical: boolean\r\n}\r\nexport function isPhysical(entity: CombinedEntity): entity is PhysicalEntity { return \"physical\" in entity; }\r\n\r\nexport interface WallEntity {\r\n  wall: boolean\r\n  position: Position,\r\n  dimensions: Dimensions\r\n}\r\nexport function isWall(entity: CombinedEntity): entity is WallEntity { return \"wall\" in entity; }\r\n\r\nexport type Entity = PhysicalEntity | WallEntity;\r\n\r\n\r\nexport function setup() {\r\n  Collision.Subscribe((player, collidable, details) => {\r\n    if (\"player\" in player) {\r\n      if (\"wall\" in collidable) {\r\n        player.position = utils.toPoint(utils.sub(player.position, utils.scale(details.normal, details.depth)));\r\n      }\r\n    }\r\n  });\r\n}\r\n"]}