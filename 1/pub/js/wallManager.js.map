{"version":3,"sources":["wallManager.ts"],"names":[],"mappings":";;;IAQA,oBAA2B,MAAsB,IAA8B,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,CAAC,CAAC;;IAO7G,gBAAuB,MAAsB,IAA0B,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC;;IAKjG;QACI,4BAAS,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,UAAU,EAAE,OAAO;YAC5C,EAAE,CAAC,CAAC,QAAQ,IAAI,MAAM,CAAC,CAAC,CAAC;gBACrB,EAAE,CAAC,CAAC,MAAM,IAAI,UAAU,CAAC,CAAC,CAAC;oBACvB,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC;oBACvD,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC;gBAC3D,CAAC;YACL,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;;;;;;;;;;QACD,CAAC","file":"wallManager.js","sourcesContent":["import {CheckEntity} from \"./ces\";\r\nimport {Collision, Entity as CollidableEntity} from \"./collisionManager\";\r\nimport {Dimensions, Position} from \"./pixiManager\"\r\nimport {CombinedEntity} from \"./entity\";\r\n\r\nexport interface PhysicalEntity extends CollidableEntity {\r\n    physical: boolean\r\n}\r\nexport function isPhysical(entity: CombinedEntity): entity is PhysicalEntity { return \"physical\" in entity; }\r\n\r\nexport interface WallEntity {\r\n    wall: boolean\r\n    position: Position,\r\n    dimensions: Dimensions\r\n}\r\nexport function isWall(entity: CombinedEntity): entity is WallEntity { return \"wall\" in entity; }\r\n\r\nexport type Entity = PhysicalEntity | WallEntity;\r\n\r\n\r\nexport function Setup() {\r\n    Collision.Subscribe((player, collidable, details) => {\r\n        if (\"player\" in player) {\r\n            if (\"wall\" in collidable) {\r\n                player.position.x -= details.normal[0] * details.depth;\r\n                player.position.y -= details.normal[1] * details.depth;\r\n            }\r\n        }\r\n    });\r\n}\r\n"]}