{"version":3,"sources":["cameraManager.ts"],"names":[],"mappings":";;;IAoBA,kBAAyB,MAAsB,IAAsB,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,CAAC,CAAC;;IAEjG,eAAsB,MAAc;QAClC,KAAK,GAAG,MAAM,CAAC;IACjB,CAAC;;IAED,kBAAyB,MAA0C;QACjE,IAAI,YAAY,GAAG,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAChD,YAAY,CAAC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC7C,YAAY,CAAC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;IAC/C,CAAC;;IAED;QACE,yBAAM,CAAC,SAAS,CAAC;YACf,GAAG,CAAC,CAAC,IAAI,YAAY,IAAI,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACnD,IAAI,EAAE,GAAG,YAAY,CAAC,MAAM,CAAC,OAAO,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC/D,IAAI,EAAE,GAAG,YAAY,CAAC,MAAM,CAAC,OAAO,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAE/D,YAAY,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;gBACrE,YAAY,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;gBAErE,KAAK,GAAG,KAAK,GAAG,SAAS,CAAC;YAC5B,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;;;;;;;;;;;;YAtCG,KAAK,GAAG,CAAC,CAAC;YACV,SAAS,GAAG,IAAI,CAAC;QAsCrB,CAAC","file":"cameraManager.js","sourcesContent":["import * as ces from \"./ces\";\r\nimport {Update} from \"./animationManager\";\r\n\r\nimport {Position} from \"./pixiManager\";\r\nimport {CombinedEntity} from \"./entity\";\r\n\r\nlet shake = 0;\r\nlet shakeFade = 0.95;\r\n\r\nexport interface Entity {\r\n  camera: {\r\n    targetX: number,\r\n    targetY: number,\r\n  },\r\n  dimensions: {\r\n    width: number,\r\n    height: number\r\n  }\r\n  position: Position\r\n}\r\nexport function isCamera(entity: CombinedEntity): entity is Entity { return \"camera\" in entity; }\r\n\r\nexport function Shake(amount: number) {\r\n  shake = amount;\r\n}\r\n\r\nexport function Retarget(target: {targetX: number, targetY: number}) {\r\n  var cameraEntity = ces.getEntities(isCamera)[0];\r\n  cameraEntity.camera.targetX = target.targetX;\r\n  cameraEntity.camera.targetY = target.targetY;\r\n}\r\n\r\nexport function Setup() {\r\n  Update.Subscribe(() => {\r\n    for (let cameraEntity of ces.getEntities(isCamera)) {\r\n      var dy = cameraEntity.camera.targetY - cameraEntity.position.y;\r\n      var dx = cameraEntity.camera.targetX - cameraEntity.position.x;\r\n\r\n      cameraEntity.position.x += dx * 0.05 + (Math.random() - 0.5) * shake;\r\n      cameraEntity.position.y += dy * 0.05 + (Math.random() - 0.5) * shake;\r\n\r\n      shake = shake * shakeFade;\r\n    }\r\n  });\r\n}\r\n"]}