{"version":3,"sources":["ces.ts"],"names":[],"mappings":";;;;;;;;;;;IAOA,mBAAmB,MAAsC,IAA6B,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC;IAM9G,mBAAgC,MAAsC;;YAClE,IAAI,OAAO,GAAG,MAAM,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC7C,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,IAAI,MAAM,IAAI,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC1D,IAAI,aAA4B,CAAC;gBACjC,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBACpB,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,IAAI,QAAQ,CAAC,CAAC,CAAC;wBACxB,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;wBAChE,MAAM,CAAC,IAAI,CAAC;oBAChB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC;oBACjC,CAAC;oBACD,aAAa,GAAG,MAAM,CAAC;gBAC3B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,aAAa,qBAAO,MAAM,IAAE,EAAE,EAAE,SAAS,CAAC,QAAQ,EAAE,GAAC,CAAC;oBACtD,QAAQ,CAAC,SAAS,CAAC,GAAG,aAAa,CAAC;oBACpC,SAAS,EAAE,CAAC;gBAChB,CAAC;gBACD,MAAM,WAAW,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;gBACzC,MAAM,CAAC,MAAM,CAAC;YAClB,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;KAAA;;IAED,sBAAmC,MAAW;;YAC1C,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC9B,OAAO,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAC/B,CAAC;KAAA;;IAED,qBAAsD,KAA8C;QAChG,IAAI,WAAW,GAA2B,EAAE,CAAC;QAC7C,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,MAAM,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;YAC1B,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAChB,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC7B,CAAC;QACL,CAAC;QACD,MAAM,CAAC,WAAW,CAAC;IACvB,CAAC;;IAED,yBAAgC,SAAiB;QAC7C,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,SAAS,IAAI,CAAC,CAAC,CAAC;IACvF,CAAC;;IAED,mBAA0B,EAAU;QAChC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACxB,CAAC;;;;;;;;;;YAvDG,SAAS,GAAG,CAAC,CAAC;YACd,QAAQ,GAAkC,EAAE,CAAC;YAKjD,yBAAW,WAAW,GAAG,IAAI,2BAAY,EAA2B,EAAC;YACrE,yBAAW,WAAW,GAAG,IAAI,4BAAa,EAAiB,EAAC;YAC5D,2BAAW,aAAa,GAAG,IAAI,4BAAa,EAAiB,EAAC;QAgD9D,CAAC","file":"ces.js","sourcesContent":["import {PollManager1, EventManager1} from \"./eventManager\";\r\nimport {CombinedEntity} from \"./entity\";\r\n\r\nlet currentId = 0;\r\nlet entities: {[id: string]: TrackedEntity} = {};\r\n\r\nexport type TrackedEntity = { id: string } & CombinedEntity;\r\nfunction isTracked(entity: CombinedEntity | TrackedEntity): entity is TrackedEntity { return \"id\" in entity; }\r\n\r\nexport let CheckEntity = new PollManager1<CombinedEntity, boolean>();\r\nexport let EntityAdded = new EventManager1<TrackedEntity>();\r\nexport let EntityRemoved = new EventManager1<TrackedEntity>();\r\n\r\nexport async function AddEntity(entity: CombinedEntity | TrackedEntity) {\r\n    let results = await CheckEntity.Poll(entity);\r\n    if (results.every(result => result || result === undefined)) {\r\n        let trackedEntity: TrackedEntity;\r\n        if (isTracked(entity)) {\r\n            if (entity.id in entities) {\r\n                console.log(\"WARNING: repeat id for \" + JSON.stringify(entity));\r\n                return null;\r\n            } else {\r\n                entities[entity.id] = entity;\r\n            }\r\n            trackedEntity = entity;\r\n        } else {\r\n            trackedEntity = {...entity, id: currentId.toString()};\r\n            entities[currentId] = trackedEntity;\r\n            currentId++;\r\n        }\r\n        await EntityAdded.Publish(trackedEntity);\r\n        return entity;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport async function RemoveEntity(entity: any) {\r\n    EntityRemoved.Publish(entity);\r\n    delete entities[entity.id];\r\n}\r\n\r\nexport function GetEntities<T extends CombinedEntity>(guard: (entity: CombinedEntity) => entity is T): (T & { id: string })[] {\r\n    let returnArray: (T & { id: string })[] = [];\r\n    for (let id of Object.keys(entities)) {\r\n        let entity = entities[id];\r\n        if (guard(entity)) {\r\n            returnArray.push(entity);\r\n        }\r\n    }\r\n    return returnArray;\r\n}\r\n\r\nexport function GetEntitiesWith(component: string) {\r\n    return Object.keys(entities).map(key => entities[key]).filter(e => component in e);\r\n}\r\n\r\nexport function GetEntity(id: string) {\r\n    return entities[id];\r\n}\r\n"]}