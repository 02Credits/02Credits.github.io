{"version":3,"sources":["ces.ts"],"names":[],"mappings":"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","file":"ces.js","sourcesContent":["import {PollManager1, EventManager1} from \"./eventManager\";\r\nimport {CombinedEntity} from \"./entity\";\r\n\r\nlet currentId = 0;\r\nexport let entities: Map<string, TrackedEntity> = new Map<string, TrackedEntity>();\r\nexport let sortedEntities: Map<(entity: TrackedEntity) => boolean, Set<TrackedEntity>> = new Map();\r\n\r\nexport type TrackedEntity = { id: string } & CombinedEntity;\r\nfunction isTracked(entity: CombinedEntity | TrackedEntity): entity is TrackedEntity { return \"id\" in entity; }\r\n\r\nexport let CheckEntity = new PollManager1<CombinedEntity, boolean>();\r\nexport let EntityAdded = new EventManager1<TrackedEntity>();\r\nexport let EntityRemoved = new EventManager1<TrackedEntity>();\r\n\r\nfunction addToLists(entity: TrackedEntity) {\r\n  for (let condition of sortedEntities.keys()) {\r\n    if (condition(entity)) {\r\n      sortedEntities.get(condition).add(entity);\r\n    }\r\n  }\r\n  entities.set(entity.id, entity);\r\n}\r\n\r\nexport function addEntity(entity: CombinedEntity | TrackedEntity) {\r\n  let results = CheckEntity.Poll(entity);\r\n  if (results.every(result => result || result === undefined)) {\r\n    let trackedEntity: TrackedEntity;\r\n    if (isTracked(entity)) {\r\n      if (entity.id in entities) {\r\n        console.warn(\"WARNING: repeat id for \" + JSON.stringify(entity));\r\n        return null;\r\n      } else {\r\n        addToLists(entity);\r\n      }\r\n      trackedEntity = entity;\r\n    } else {\r\n      trackedEntity = {...entity, id: currentId.toString()};\r\n      addToLists(trackedEntity);\r\n      currentId++;\r\n    }\r\n    EntityAdded.Publish(trackedEntity);\r\n    return trackedEntity;\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function removeEntity(entity: any) {\r\n  EntityRemoved.Publish(entity);\r\n  for (let guard of sortedEntities.keys()) {\r\n    let entitySet = sortedEntities.get(guard);\r\n    if (entitySet.has(entity)) {\r\n      entitySet.delete(entity);\r\n    }\r\n  }\r\n  entities.delete(entity.id);\r\n}\r\n\r\nexport function getEntities<T extends CombinedEntity>(guard: (entity: CombinedEntity) => entity is T): (T & { id: string })[] {\r\n  if (sortedEntities.has(guard)) {\r\n    return Array.from(sortedEntities.get(guard).values()) as any;\r\n  } else {\r\n    let newSet = new Set();\r\n    for (let id of entities.keys()) {\r\n      let entity = entities.get(id);\r\n      if (guard(entity)) {\r\n        newSet.add(entity);\r\n      }\r\n    }\r\n    sortedEntities.set(guard, newSet);\r\n    return Array.from(newSet.values()) as any;\r\n  }\r\n}\r\n\r\nexport function getEntity(id: string) {\r\n  return entities.get(id);\r\n}\r\n"]}