{"version":3,"sources":["webglManager.ts"],"names":[],"mappings":"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","file":"webglManager.js","sourcesContent":["import * as twgl from \"twgl\";\r\n\r\nimport {Update} from \"./animationManager\";\r\nimport * as ces from \"./ces\";\r\nimport {isCamera} from \"./cameraManager\";\r\nimport {isCollidable, getCorners} from \"./collisionManager\";\r\n\r\nimport {CombinedEntity} from \"./entity\";\r\n\r\nconst obj: any = {};\r\n\r\nexport let canvasSize: number;\r\n\r\nexport interface Position {\r\n  x: number;\r\n  y: number;\r\n  z?: number;\r\n  cx?: number;\r\n  cy?: number;\r\n}\r\n\r\nexport interface Dimensions {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport interface Color {\r\n  h: number;\r\n  s: number;\r\n  v: number;\r\n  a?: number;\r\n}\r\n\r\nexport interface Entity {\r\n  texture: string;\r\n  position: Position;\r\n  dimensions: Dimensions;\r\n  scale?: number;\r\n  rotation?: number;\r\n  color?: Color;\r\n}\r\nexport function isRenderable(entity: CombinedEntity): entity is Entity { return \"texture\" in entity; }\r\n\r\nfunction positionCanvas(canvas: HTMLCanvasElement, gl: WebGLRenderingContext) {\r\n  canvasSize = Math.min(window.innerWidth, window.innerHeight) - 100;\r\n  canvas.style.width = canvasSize + \"px\";\r\n  canvas.style.height = canvasSize + \"px\";\r\n  canvas.style.marginLeft = -canvasSize / 2 + \"px\";\r\n  canvas.style.marginTop = -canvasSize / 2 + \"px\";\r\n  canvas.width = canvasSize;\r\n  canvas.height = canvasSize;\r\n  gl.viewport(0, 0, canvasSize, canvasSize);\r\n}\r\n\r\nasync function fetchShader(path: string) {\r\n  let result = await fetch(path);\r\n  return await result.text();\r\n}\r\n\r\ninterface TextureInfo {\r\n  size: number,\r\n  canvas: HTMLCanvasElement,\r\n  texCoords: { [id: string]: number[] },\r\n  texture?: WebGLTexture\r\n}\r\n\r\nasync function packTextures(images: { [id: string]: HTMLImageElement }): Promise<TextureInfo> {\r\n  let imageArray: {image: HTMLImageElement, id: string}[] = [];\r\n  for (let id in images) {\r\n    imageArray.push({image: images[id], id: id});\r\n  }\r\n  imageArray = imageArray.sort((a, b) => a.image.height - b.image.height);\r\n  let size = 16;\r\n  let correctSize = true;\r\n  do {\r\n    correctSize = true;\r\n    size *= 2;\r\n    let x = 0;\r\n    let y = 0;\r\n    let rowHeight = imageArray[0].image.height;\r\n    for (let imageData of imageArray) {\r\n      let image = imageData.image;\r\n      x += image.width + 2;\r\n      if (x > size) {\r\n        x = 0;\r\n        y += rowHeight + 2;\r\n        if (y + image.height > size) {\r\n          correctSize = false;\r\n          break;\r\n        }\r\n        rowHeight = image.height;\r\n      }\r\n    }\r\n  } while (!correctSize)\r\n\r\n  let canvas = document.createElement('canvas');\r\n  canvas.width = size;\r\n  canvas.height = size;\r\n  let ctx = canvas.getContext('2d');\r\n  let x = 0;\r\n  let y = 0;\r\n  let rowHeight = imageArray[0].image.height;\r\n  let imageLayoutInfo: { [id: string]: number[] } = {};\r\n  for (let imageData of imageArray) {\r\n    let image = imageData.image;\r\n    if (x + image.width > size) {\r\n      x = 0;\r\n      y += rowHeight + 2;\r\n      rowHeight = image.height;\r\n    }\r\n    ctx.drawImage(image, x, y);\r\n    imageLayoutInfo[imageData.id] = [\r\n      x, y,\r\n      x + image.width, y,\r\n      x, y + image.height,\r\n      x + image.width, y + image.height\r\n    ];\r\n    x += image.width + 2;\r\n  }\r\n  return {size: size, canvas: canvas, texCoords: imageLayoutInfo};\r\n}\r\n\r\nasync function loadTextures(basePath: string, texturePaths: string[]) {\r\n  let images: { [id: string]: HTMLImageElement } = {};\r\n  for (let path of texturePaths) {\r\n    let imagePath = basePath + \"assets/Images/\" + path;\r\n    let image = new Image();\r\n    let loadedPromise = new Promise((resolve) => {\r\n      let handler = () => {\r\n        resolve();\r\n        image.removeEventListener('load', handler);\r\n      }\r\n      image.addEventListener('load', handler, false);\r\n      image.src = imagePath;\r\n    });\r\n    await loadedPromise;\r\n    images[path] = image;\r\n  }\r\n\r\n  return packTextures(images);\r\n}\r\n\r\nasync function setupTextures(gl: WebGLRenderingContext, basePath: string, texturePaths: string[]) {\r\n  let result = await loadTextures(basePath, texturePaths);\r\n  document.body.appendChild(result.canvas);\r\n  let texture = twgl.createTexture(gl, {\r\n    src: result.canvas,\r\n    // wrap: gl.CLAMP_TO_EDGE,\r\n    // mag: gl.NEAREST,\r\n    // min: gl.NEAREST\r\n  });\r\n\r\n  return {texture: texture, ...result};\r\n}\r\n\r\nasync function compileProgram(gl: WebGLRenderingContext, basePath: string, folder: string) {\r\n  return twgl.createProgramInfo(gl, [\r\n    await fetchShader(basePath + \"assets/Shaders/\" + folder + \"/vert.glsl\"),\r\n    await fetchShader(basePath + \"assets/Shaders/\" + folder + \"/frag.glsl\")\r\n  ]);\r\n}\r\n\r\nasync function setCameraUniforms(program: twgl.ProgramInfo) {\r\n  let camera = ces.GetEntities(isCamera)[0];\r\n  let cameraCX = camera.position.cx || 0.5;\r\n  let cameraCY = camera.position.cy || 0.5;\r\n  let cameraWidth = (camera.dimensions || obj).width || 100;\r\n  let cameraHeight = (camera.dimensions || obj).height || 100;\r\n\r\n  let cameraUniforms = {\r\n    u_camera_dimensions: [camera.position.x, camera.position.y, cameraWidth, cameraHeight]\r\n  };\r\n  twgl.setUniforms(program, cameraUniforms);\r\n\r\n}\r\n\r\nasync function clearCanvas(gl: WebGLRenderingContext, canvas: HTMLCanvasElement) {\r\n  positionCanvas(canvas, gl);\r\n  gl.clearColor(1, 1, 1, 1);\r\n  gl.clear(gl.COLOR_BUFFER_BIT);\r\n  gl.enable(gl.BLEND);\r\n  gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n}\r\n\r\nasync function drawSprites(gl: WebGLRenderingContext, spriteProgram: twgl.ProgramInfo, textureInfo: TextureInfo) {\r\n  gl.useProgram(spriteProgram.program);\r\n  setCameraUniforms(spriteProgram);\r\n\r\n  let batchCount = 0;\r\n  let coords: number[][] = [];\r\n  let positions: number[][] = [];\r\n  let texCoords: number[][] = [];\r\n  let rotations: number[][] = [];\r\n  let dimensions: number[][] = [];\r\n  let centers: number[][] = [];\r\n  let scales: number[][] = [];\r\n  let indices: number[][] = [];\r\n\r\n  twgl.setUniforms(spriteProgram, {\r\n    u_texmap: textureInfo.texture,\r\n    u_map_dimensions: textureInfo.size\r\n  });\r\n\r\n  let drawBatch = () => {\r\n    let arrays = {\r\n      a_coord: {numComponents: 2, data: [].concat.apply([], coords)},\r\n      a_position: {numComponents: 3, data: [].concat.apply([], positions)},\r\n      a_texcoord: {numComponents: 2, data: [].concat.apply([], texCoords)},\r\n      a_rotation: {numComponents: 1, data: [].concat.apply([], rotations)},\r\n      a_dimensions: {numComponents: 2, data: [].concat.apply([], dimensions)},\r\n      a_center: {numComponents: 2, data: [].concat.apply([], centers)},\r\n      a_scale: {numComponents: 1, data: [].concat.apply([], scales)},\r\n      indices: {numComponents: 3, data: [].concat.apply([], indices)}\r\n    };\r\n    coords = positions = texCoords = rotations = dimensions = centers = scales = indices = [];\r\n    let bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\r\n    twgl.setBuffersAndAttributes(gl, spriteProgram, bufferInfo);\r\n    twgl.drawBufferInfo(gl, gl.TRIANGLES, bufferInfo);\r\n    batchCount = 0;\r\n  }\r\n\r\n  for (let entity of ces.GetEntities(isRenderable).sort((a, b) => (a.position.z || 0) - (b.position.z || 0))) {\r\n    coords.push([0, 0, 1, 0, 0, 1, 1, 1]);\r\n    let x = entity.position.x;\r\n    let y = entity.position.y;\r\n    let z = entity.position.z || 0;\r\n    positions.push([x, y, z, x, y, z, x, y, z, x, y, z]);\r\n    texCoords.push(textureInfo.texCoords[entity.texture]);\r\n    let rotation = entity.rotation || 0;\r\n    rotations.push([rotation, rotation, rotation, rotation]);\r\n    let w = entity.dimensions.width;\r\n    let h = entity.dimensions.height;\r\n    dimensions.push([w, h, w, h, w, h, w, h]);\r\n    let scale = entity.scale || 1;\r\n    let cx = entity.position.cx || 0.5;\r\n    let cy = entity.position.cy || 0.5;\r\n    centers.push([cx, cy, cx, cy, cx, cy, cx, cy]);\r\n    scales.push([scale, scale, scale, scale]);\r\n    let offset = batchCount * 4;\r\n    indices.push([0 + offset, 1 + offset, 2 + offset, 2 + offset, 1 + offset, 3 + offset]);\r\n    batchCount++;\r\n    if (batchCount > 200) {\r\n      drawBatch();\r\n    }\r\n  }\r\n  drawBatch();\r\n}\r\n\r\nasync function drawDebug(gl: WebGLRenderingContext, debugProgram: twgl.ProgramInfo) {\r\n  gl.useProgram(debugProgram.program);\r\n\r\n  setCameraUniforms(debugProgram);\r\n\r\n  let batchCount = 0;\r\n  let indexOffset = 0;\r\n  let coords: number[][] = [];\r\n  let indices: number[][] = [];\r\n\r\n  twgl.setUniforms(debugProgram, {\r\n    u_color: [1, 0, 0, 0.5]\r\n  });\r\n\r\n  let drawBatch = () => {\r\n    let arrays = {\r\n      a_coord: {numComponents: 2, data: [].concat.apply([], coords)},\r\n      indices: {numComponents: 3, data: [].concat.apply([], indices)}\r\n    };\r\n    coords = indices = [];\r\n    indexOffset = 0;\r\n    let bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\r\n    twgl.setBuffersAndAttributes(gl, debugProgram, bufferInfo);\r\n    twgl.drawBufferInfo(gl, gl.TRIANGLES, bufferInfo);\r\n    batchCount = 0;\r\n  }\r\n\r\n  for (let entity of ces.GetEntities(isCollidable).sort((a, b) => (a.position.z || 0) - (b.position.z || 0))) {\r\n    let corners = getCorners(entity);\r\n    for (let poly of corners) {\r\n      coords.push([].concat.apply([], poly));\r\n      let polyIndices: number[] = [];\r\n      for (let i = 2; i < poly.length; i++) {\r\n        polyIndices = polyIndices.concat([indexOffset + i, indexOffset, indexOffset + i - 1])\r\n      }\r\n      indices.push(polyIndices);\r\n      indexOffset += poly.length;\r\n    }\r\n    batchCount++;\r\n    if (batchCount > 200) {\r\n      drawBatch();\r\n    }\r\n  }\r\n  drawBatch();\r\n}\r\n\r\nexport async function Setup(texturePaths: string[]) {\r\n  let canvas = document.createElement('canvas');\r\n  document.getElementById(\"game\").appendChild(canvas);\r\n  let gl = canvas.getContext('webgl');\r\n  let basePath = window.location.href.substring(0, window.location.href.lastIndexOf('/') + 1);\r\n  canvas.focus();\r\n\r\n  let textures = await setupTextures(gl, basePath, texturePaths);\r\n\r\n  let spriteProgram = await compileProgram(gl, basePath, \"Sprite\");\r\n  let debugProgram = await compileProgram(gl, basePath, \"Debug\");\r\n\r\n  ces.CheckEntity.Subscribe((entity) => {\r\n    if (isRenderable(entity)) {\r\n      entity.color = entity.color || { h: 1, s: 1, v: 1, a: 1 };\r\n    }\r\n    return true;\r\n  });\r\n\r\n  Update.Subscribe(async () => {\r\n    clearCanvas(gl, canvas);\r\n    await drawSprites(gl, spriteProgram, textures);\r\n    await drawDebug(gl, debugProgram);\r\n  });\r\n\r\n}\r\n"]}