{"version":3,"sources":["inputManager.ts"],"names":[],"mappings":";;;;;;;YAGA,WAAc,YAAY;gBACtB,IAAI,IAAI,GAA+B,EAAE,CAAC;gBAC1C,IAAI,YAAY,GAA+B,EAAE,CAAC;gBAClD,IAAI,OAAO,GAAG,KAAK,CAAC;gBACpB,IAAI,SAAS,GAAG,KAAK,CAAC;gBACtB,IAAI,MAAM,GAAG,CAAC,CAAC;gBACf,IAAI,MAAM,GAAG,CAAC,CAAC;gBAEf,IAAI,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;gBAC9C,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC;oBAClB,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;gBACvB,CAAC,CAAC;gBAEF,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC;oBAChB,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;gBACxB,CAAC,CAAC;gBAEF,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,WAAW,GAAG,CAAC,CAAC;oBAC9D,YAAY,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,CAAA;oBACzC,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAA;oBACjD,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAA;oBAClD,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC;oBACnB,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC;gBACvB,CAAC,CAAA;gBAED,OAAO,CAAC,YAAY,GAAG;oBACnB,OAAO,CAAC,KAAK,EAAE,CAAC;oBAChB,OAAO,GAAG,IAAI,CAAC;gBACnB,CAAC,CAAA;gBAED,OAAO,CAAC,YAAY,GAAG;oBACnB,OAAO,GAAG,KAAK,CAAC;gBACpB,CAAC,CAAA;gBAED,iBAAwB,GAAW;oBAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBACZ,MAAM,CAAC,IAAI,CAAC;oBAChB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,MAAM,CAAC,KAAK,CAAC;oBACjB,CAAC;gBACL,CAAC;gBANe,oBAAO,UAMtB,CAAA;gBAED;oBACI,8GAA8G;oBAC9G,6FAA6F;oBAC7F,WAAW;oBACX,kCAAkC;oBAClC,mBAAmB;oBACnB,mBAAmB;oBACnB,uBAAuB;oBACvB,KAAK;oBACL,MAAM,CAAC;wBACH,YAAY,EAAE,YAAY;wBAC1B,CAAC,EAAE,MAAM;wBACT,CAAC,EAAE,MAAM;wBACT,OAAO,EAAE,OAAO;qBACnB,CAAC;gBACN,CAAC;gBAfe,uBAAU,aAezB,CAAA;YACL,CAAC,EA1Da,YAAY,KAAZ,YAAY,QA0DzB;;iCAEc,YAAY;QAC3B,CAAC","file":"inputManager.js","sourcesContent":["import {root} from \"./pixiManager\";\r\nimport * as pixi from \"pixi.js\";\r\n\r\nexport module InputManager {\r\n    let keys: { [key: string]: boolean } = {};\r\n    let mouseButtons: { [key: string]: boolean } = {};\r\n    let enabled = false;\r\n    let mouseDown = false;\r\n    let mouseX = 0;\r\n    let mouseY = 0;\r\n\r\n    let gameDiv = document.getElementById(\"game\");\r\n    gameDiv.onkeydown = (e) => {\r\n        keys[e.key] = true;\r\n    };\r\n\r\n    gameDiv.onkeyup = (e) => {\r\n        keys[e.key] = false;\r\n    };\r\n\r\n    gameDiv.onmousedown = gameDiv.onmouseup = gameDiv.onmousemove = (e) => {\r\n        mouseButtons.left = (e.buttons & 1) === 1\r\n        mouseButtons.right = ((e.buttons >> 1) & 1) === 1\r\n        mouseButtons.middle = ((e.buttons >> 2) & 1) === 1\r\n        mouseX = e.offsetX;\r\n        mouseY = e.offsetY;\r\n    }\r\n\r\n    gameDiv.onmouseenter = () => {\r\n        gameDiv.focus();\r\n        enabled = true;\r\n    }\r\n\r\n    gameDiv.onmouseleave = () => {\r\n        enabled = false;\r\n    }\r\n\r\n    export function KeyDown(key: string) {\r\n        if (keys[key]) { // Yes this is dumb. This is to handle if the key hasn't been pressed before\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    export function MouseState() {\r\n        // NOTE I should probably change this to not do the transform here and instead leave it to the pixi Manager...\r\n        // let result = root.transform.worldTransform.invert().apply(new pixi.Point(mouseX, mouseY));\r\n        // return {\r\n        //     mouseButtons: mouseButtons,\r\n        //     x: result.x,\r\n        //     y: result.y,\r\n        //     enabled: enabled\r\n        // };\r\n        return {\r\n            mouseButtons: mouseButtons,\r\n            x: mouseX,\r\n            y: mouseY,\r\n            enabled: enabled\r\n        };\r\n    }\r\n}\r\n\r\nexport default InputManager;\r\n"]}