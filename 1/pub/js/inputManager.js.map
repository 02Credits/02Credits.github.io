{"version":3,"sources":["inputManager.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;YAIA,WAAc,YAAY;gBACxB,IAAI,IAAI,GAA+B,EAAE,CAAC;gBAC1C,IAAI,YAAY,GAA+B,EAAE,CAAC;gBAClD,IAAI,OAAO,GAAG,KAAK,CAAC;gBACpB,IAAI,SAAS,GAAG,KAAK,CAAC;gBACtB,IAAI,MAAM,GAAG,CAAC,CAAC;gBACf,IAAI,MAAM,GAAG,CAAC,CAAC;gBAEf,IAAI,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;gBAC9C,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC;oBACpB,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;gBACrB,CAAC,CAAC;gBAEF,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC;oBAClB,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;gBACtB,CAAC,CAAC;gBAEF,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,WAAW,GAAG,CAAC,CAAC;oBAChE,YAAY,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,CAAA;oBACzC,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAA;oBACjD,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAA;oBAClD,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC;oBACnB,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC;gBACrB,CAAC,CAAA;gBAED,OAAO,CAAC,YAAY,GAAG;oBACrB,OAAO,CAAC,KAAK,EAAE,CAAC;oBAChB,OAAO,GAAG,IAAI,CAAC;gBACjB,CAAC,CAAA;gBAED,OAAO,CAAC,YAAY,GAAG;oBACrB,OAAO,GAAG,KAAK,CAAC;gBAClB,CAAC,CAAA;gBAED,iBAAwB,GAAW;oBACjC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBACd,MAAM,CAAC,IAAI,CAAC;oBACd,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,CAAC,KAAK,CAAC;oBACf,CAAC;gBACH,CAAC;gBANe,oBAAO,UAMtB,CAAA;gBAED;oBACE,8GAA8G;oBAC9G,IAAI,MAAM,GAAG,GAAG,CAAC,WAAW,CAAC,wBAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC1C,MAAM,CAAC;wBACL,YAAY,EAAE,YAAY;wBAC1B,CAAC,EAAE,CAAC,MAAM,GAAG,yBAAU,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,GAAG,yBAAU;wBACnE,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,yBAAU,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,GAAG,yBAAU;wBACrE,OAAO,EAAE,OAAO;qBACjB,CAAC;gBACJ,CAAC;gBATe,uBAAU,aASzB,CAAA;YACH,CAAC,EApDa,YAAY,KAAZ,YAAY,QAoDzB;;iCAEc,YAAY;QAC3B,CAAC","file":"inputManager.js","sourcesContent":["import * as ces from \"./ces\";\r\nimport {isCamera} from \"./cameraManager\";\r\nimport {canvasSize} from \"./webglManager\";\r\n\r\nexport module InputManager {\r\n  let keys: { [key: string]: boolean } = {};\r\n  let mouseButtons: { [key: string]: boolean } = {};\r\n  let enabled = false;\r\n  let mouseDown = false;\r\n  let mouseX = 0;\r\n  let mouseY = 0;\r\n\r\n  let gameDiv = document.getElementById(\"game\");\r\n  gameDiv.onkeydown = (e) => {\r\n    keys[e.key] = true;\r\n  };\r\n\r\n  gameDiv.onkeyup = (e) => {\r\n    keys[e.key] = false;\r\n  };\r\n\r\n  gameDiv.onmousedown = gameDiv.onmouseup = gameDiv.onmousemove = (e) => {\r\n    mouseButtons.left = (e.buttons & 1) === 1\r\n    mouseButtons.right = ((e.buttons >> 1) & 1) === 1\r\n    mouseButtons.middle = ((e.buttons >> 2) & 1) === 1\r\n    mouseX = e.offsetX;\r\n    mouseY = e.offsetY;\r\n  }\r\n\r\n  gameDiv.onmouseenter = () => {\r\n    gameDiv.focus();\r\n    enabled = true;\r\n  }\r\n\r\n  gameDiv.onmouseleave = () => {\r\n    enabled = false;\r\n  }\r\n\r\n  export function KeyDown(key: string) {\r\n    if (keys[key]) { // Yes this is dumb. This is to handle if the key hasn't been pressed before\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  export function MouseState() {\r\n    // NOTE I should probably change this to not do the transform here and instead leave it to the pixi Manager...\r\n    let camera = ces.GetEntities(isCamera)[0];\r\n    return {\r\n      mouseButtons: mouseButtons,\r\n      x: (mouseX - canvasSize / 2) * camera.dimensions.width / canvasSize,\r\n      y: -(mouseY - canvasSize / 2) * camera.dimensions.height / canvasSize,\r\n      enabled: enabled\r\n    };\r\n  }\r\n}\r\n\r\nexport default InputManager;\r\n"]}