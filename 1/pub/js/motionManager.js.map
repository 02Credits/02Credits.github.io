{"version":3,"sources":["motionManager.ts"],"names":[],"mappings":";;;IAYA,kBAAyB,MAAsB,IAAsB,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,CAAC,CAAC;;IAEnG;QACE,yBAAM,CAAC,SAAS,CAAC;YACf,GAAG,CAAC,CAAC,IAAI,MAAM,IAAI,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC7C,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAC9D,EAAE,CAAC,CAAC,UAAU,IAAI,MAAM,CAAC,CAAC,CAAC;oBACzB,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAClE,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;;;;;;;;;;;;;;;QACD,CAAC","file":"motionManager.js","sourcesContent":["import * as ces from \"./ces\";\r\nimport * as utils from \"./utils\";\r\nimport {CombinedEntity} from \"./entity\";\r\nimport {Update} from \"./animationManager\";\r\n\r\nexport interface Entity {\r\n  rotation: number,\r\n  position: utils.Point,\r\n  velocity: utils.Point,\r\n  angularVelocity: number,\r\n  friction?: number\r\n}\r\nexport function isMoving(entity: CombinedEntity): entity is Entity { return \"velocity\" in entity; }\r\n\r\nexport function setup() {\r\n  Update.Subscribe(() => {\r\n    for (let entity of ces.getEntities(isMoving)) {\r\n      entity.position = utils.sum(entity.position, entity.velocity);\r\n      if (\"friction\" in entity) {\r\n        entity.velocity = utils.scale(entity.velocity, entity.friction);\r\n      }\r\n    }\r\n  });\r\n}\r\n"]}